from random import randint

def myfd(i, step, ixy=''):
    global t,gap, totalStep, CUR_XY
    ## 自定义前进步骤，准确控制前进数
    flag = 0 ##当步骤超过，则函数返回
    while i>0:
        t.fd(gap)
        if ixy == "x+":
            CUR_XY[0] += 1
        elif ixy == "x-":
            CUR_XY[0] -= 1
        elif ixy == "y+":
            CUR_XY[1] += 1
        elif ixy == "y-":
            CUR_XY[1] -= 1

        print(step+1, CUR_XY, '--')
        t.pencolor(0,0,255)
        # t.write(str(step+1))
        t.dot()
        t.pencolor(255,0,0)

        # if step%2 == 0:
        #     t.pencolor(0,0,255)
        #     # t.write(str(step+1))
        #     t.dot()
        #     t.pencolor(255,0,0)
        i -= 1
        step += 1
        if step >= totalStep:
            flag = 1
            t.pencolor(0,0,255)
            t.write(str(step)+str(CUR_XY))
            # t.write(str(CUR_XY))
            t.pencolor(255,0,0)
            break
        
    return (step, flag)

gap = 10
shortline = 3
s.colormode(255)

t.reset()
t.pu()
t.goto(-230,-230)
t.pd()
t.goto(250,-230)
t.stamp()
t.pu()
t.goto(-230,-230)
t.lt(90)
t.pd()
t.goto(-230,250)
t.stamp()
t.pu()
t.goto(-230,-230)
t.dot()

t.goto(-240,-240)
t.write('o')
t.goto(245,-250)
t.write('x')
t.goto(-245,240)
t.write('y')

# for i in range(1, 10):
for i in range(1, 47):
    t.goto(-230+gap*i, -230)
    t.pd()
    t.goto(-230+gap*i, -230+shortline)
    t.pu()
    if i%2==0:
        t.goto(-230+gap*i-2, -250)
        t.write(i)
     
    t.goto(-230, -230+gap*i)
    t.pd()
    t.goto(-230+shortline, -230+gap*i)
    t.pu()
    if i%2==0:
        t.goto(-245, -230+gap*i-8)
        t.write(i)

#t.ht()
t.pu()
t.goto(-230,-230)
t.setheading(0)

## start draw
t.pencolor(255,0,0)
t.fd(1*gap)
t.pd()
t.pencolor(0,0,255)
t.dot()
t.pencolor(255,0,0)
# t.fd(1*gap)
CUR_XY = [1,0]
## 规律如下：
## 1 1 1 1 2 2  --> 方向为：l l r r r l
## 1 3 3 1 4 4 
## 对应的坐标变化如下：
## "x+", "y+", "x-", "y+", "x+", "y-", 
i=-1 ## 控制变量
step = 1  ##总步数
totalStep = 2017

while step<=totalStep:
    i += 2
    # t.fd(1*gap)
    total_Flag = 0
    for inum, iorient, ixy in zip([1,i,i,1,i+1,i+1], ['l','l','r','r','r','l'],["x+", "y+", "x-", "y+", "x+", "y-", ]):
        stepFlag = myfd(inum, step, ixy)
        step = stepFlag[0]
        if iorient == 'l':
            t.lt(90)
        else:
            t.rt(90)

        if stepFlag[1]:
            total_Flag = stepFlag[1]
            break
    if total_Flag == 1:
        break


# print(i, step)


# runstep = list(range(1,6))
# runstep.extend(runstep.copy())
# runstep.sort()
# t.pencolor(255,0,0)
# t.pd()
# icount = 0
# for i in runstep:
#     # tmpstep = i*gap
#     while i!=0:
#         # if icount>441:
#         #     break
#         icount += 1
#         t.pencolor(255,0,0)
#         t.fd(gap)
#         t.dot()
#         t.pencolor(0,0,255)
#         i -= 1
#         t.write(str(icount+1))
#     t.lt(90)
 

